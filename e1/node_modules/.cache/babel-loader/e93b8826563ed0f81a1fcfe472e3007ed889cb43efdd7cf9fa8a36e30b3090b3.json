{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createNet = configure(api => {\n  /**\n   * @type {import('../types').DiagAPI[\"net\"]}\n   */\n  async function net(options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    return res.json();\n  }\n  return net;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createNet","api","net","options","res","post","signal","searchParams","headers","json"],"sources":["/home/miguioli/Aplicaciones/dapp_ipfs/node_modules/kubo-rpc-client/src/diag/net.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\nexport const createNet = configure(api => {\n  /**\n   * @type {import('../types').DiagAPI[\"net\"]}\n   */\n  async function net (options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    return res.json()\n  }\n  return net\n})\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAElE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAACG,GAAG,IAAI;EACxC;AACF;AACA;EACE,eAAeC,GAAGA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAChC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,UAAU,EAAE;MACrCC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAER,iBAAiB,CAACI,OAAO,CAAC;MACxCK,OAAO,EAAEL,OAAO,CAACK;IACnB,CAAC,CAAC;IACF,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;EACnB;EACA,OAAOP,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}