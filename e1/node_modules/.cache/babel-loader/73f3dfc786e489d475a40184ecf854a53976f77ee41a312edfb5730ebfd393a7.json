{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createMkdir = configure(api => {\n  /**\n   * @type {import('../types').FilesAPI[\"mkdir\"]}\n   */\n  async function mkdir(path, options = {}) {\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return mkdir;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createMkdir","api","mkdir","path","options","res","post","signal","searchParams","arg","headers","text"],"sources":["/home/miguioli/Aplicaciones/dapp_ipfs/node_modules/kubo-rpc-client/src/files/mkdir.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\nexport const createMkdir = configure(api => {\n  /**\n   * @type {import('../types').FilesAPI[\"mkdir\"]}\n   */\n  async function mkdir (path, options = {}) {\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return mkdir\n})\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAElE,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAACG,GAAG,IAAI;EAC1C;AACF;AACA;EACE,eAAeC,KAAKA,CAAEC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACxC,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAE;MACxCC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAET,iBAAiB,CAAC;QAC9BU,GAAG,EAAEN,IAAI;QACT,GAAGC;MACL,CAAC,CAAC;MACFM,OAAO,EAAEN,OAAO,CAACM;IACnB,CAAC,CAAC;IAEF,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;EAClB;EACA,OAAOT,KAAK;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}