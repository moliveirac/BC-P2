{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport const createResolve = configure(api => {\n  /**\n   * @type {import('../types').NameAPI[\"resolve\"]}\n   */\n  async function* resolve(path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      yield result.Path;\n    }\n  }\n  return resolve;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createResolve","api","resolve","path","options","res","post","signal","searchParams","arg","stream","headers","result","ndjson","Path"],"sources":["/home/miguioli/Aplicaciones/dapp_ipfs/node_modules/kubo-rpc-client/src/name/resolve.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {import('../types').NameAPI[\"resolve\"]}\n   */\n  async function * resolve (path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      yield result.Path\n    }\n  }\n  return resolve\n})\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAElE,OAAO,MAAMC,aAAa,GAAGF,SAAS,CAACG,GAAG,IAAI;EAC5C;AACF;AACA;EACE,gBAAiBC,OAAOA,CAAEC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC5C,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,cAAc,EAAE;MACzCC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAET,iBAAiB,CAAC;QAC9BU,GAAG,EAAEN,IAAI;QACTO,MAAM,EAAE,IAAI;QACZ,GAAGN;MACL,CAAC,CAAC;MACFO,OAAO,EAAEP,OAAO,CAACO;IACnB,CAAC,CAAC;IAEF,WAAW,MAAMC,MAAM,IAAIP,GAAG,CAACQ,MAAM,CAAC,CAAC,EAAE;MACvC,MAAMD,MAAM,CAACE,IAAI;IACnB;EACF;EACA,OAAOZ,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}